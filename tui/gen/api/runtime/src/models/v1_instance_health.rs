/*
 * rill/runtime/v1/api.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1InstanceHealth {
    #[serde(rename = "controllerError", skip_serializing_if = "Option::is_none")]
    pub controller_error: Option<String>,
    #[serde(rename = "olapError", skip_serializing_if = "Option::is_none")]
    pub olap_error: Option<String>,
    #[serde(rename = "repoError", skip_serializing_if = "Option::is_none")]
    pub repo_error: Option<String>,
    #[serde(rename = "metricsViewErrors", skip_serializing_if = "Option::is_none")]
    pub metrics_view_errors: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "parseErrorCount", skip_serializing_if = "Option::is_none")]
    pub parse_error_count: Option<i32>,
    #[serde(rename = "reconcileErrorCount", skip_serializing_if = "Option::is_none")]
    pub reconcile_error_count: Option<i32>,
}

impl V1InstanceHealth {
    pub fn new() -> V1InstanceHealth {
        V1InstanceHealth {
            controller_error: None,
            olap_error: None,
            repo_error: None,
            metrics_view_errors: None,
            parse_error_count: None,
            reconcile_error_count: None,
        }
    }
}

