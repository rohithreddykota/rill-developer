/*
 * rill/runtime/v1/api.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1HealthResponse {
    #[serde(rename = "limiterError", skip_serializing_if = "Option::is_none")]
    pub limiter_error: Option<String>,
    #[serde(rename = "connCacheError", skip_serializing_if = "Option::is_none")]
    pub conn_cache_error: Option<String>,
    #[serde(rename = "metastoreError", skip_serializing_if = "Option::is_none")]
    pub metastore_error: Option<String>,
    #[serde(rename = "networkError", skip_serializing_if = "Option::is_none")]
    pub network_error: Option<String>,
    #[serde(rename = "instancesHealth", skip_serializing_if = "Option::is_none")]
    pub instances_health: Option<std::collections::HashMap<String, models::V1InstanceHealth>>,
}

impl V1HealthResponse {
    pub fn new() -> V1HealthResponse {
        V1HealthResponse {
            limiter_error: None,
            conn_cache_error: None,
            metastore_error: None,
            network_error: None,
            instances_health: None,
        }
    }
}

