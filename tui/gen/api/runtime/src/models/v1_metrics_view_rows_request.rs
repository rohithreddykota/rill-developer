/*
 * rill/runtime/v1/api.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1MetricsViewRowsRequest {
    #[serde(rename = "instanceId", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    #[serde(rename = "metricsViewName", skip_serializing_if = "Option::is_none")]
    pub metrics_view_name: Option<String>,
    #[serde(rename = "timeStart", skip_serializing_if = "Option::is_none")]
    pub time_start: Option<String>,
    #[serde(rename = "timeEnd", skip_serializing_if = "Option::is_none")]
    pub time_end: Option<String>,
    #[serde(rename = "timeGranularity", skip_serializing_if = "Option::is_none")]
    pub time_granularity: Option<models::V1TimeGrain>,
    #[serde(rename = "where", skip_serializing_if = "Option::is_none")]
    pub r#where: Option<Box<models::V1Expression>>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Vec<models::V1MetricsViewSort>>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<String>,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    #[serde(rename = "timeZone", skip_serializing_if = "Option::is_none")]
    pub time_zone: Option<String>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::V1MetricsViewFilter>>,
}

impl V1MetricsViewRowsRequest {
    pub fn new() -> V1MetricsViewRowsRequest {
        V1MetricsViewRowsRequest {
            instance_id: None,
            metrics_view_name: None,
            time_start: None,
            time_end: None,
            time_granularity: None,
            r#where: None,
            sort: None,
            limit: None,
            offset: None,
            priority: None,
            time_zone: None,
            filter: None,
        }
    }
}

