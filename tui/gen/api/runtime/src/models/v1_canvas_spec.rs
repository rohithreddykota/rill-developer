/*
 * rill/runtime/v1/api.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1CanvasSpec {
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "columns", skip_serializing_if = "Option::is_none")]
    pub columns: Option<i64>,
    #[serde(rename = "gap", skip_serializing_if = "Option::is_none")]
    pub gap: Option<i64>,
    #[serde(rename = "variables", skip_serializing_if = "Option::is_none")]
    pub variables: Option<Vec<models::V1ComponentVariable>>,
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::V1CanvasItem>>,
    #[serde(rename = "securityRules", skip_serializing_if = "Option::is_none")]
    pub security_rules: Option<Vec<models::V1SecurityRule>>,
}

impl V1CanvasSpec {
    pub fn new() -> V1CanvasSpec {
        V1CanvasSpec {
            display_name: None,
            columns: None,
            gap: None,
            variables: None,
            items: None,
            security_rules: None,
        }
    }
}

