/*
 * rill/runtime/v1/api.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1ConnectorDriver : ConnectorDriver represents a connector driver available in the runtime.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ConnectorDriver {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "configProperties", skip_serializing_if = "Option::is_none")]
    pub config_properties: Option<Vec<models::ConnectorDriverProperty>>,
    #[serde(rename = "sourceProperties", skip_serializing_if = "Option::is_none")]
    pub source_properties: Option<Vec<models::ConnectorDriverProperty>>,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "implementsRegistry", skip_serializing_if = "Option::is_none")]
    pub implements_registry: Option<bool>,
    #[serde(rename = "implementsCatalog", skip_serializing_if = "Option::is_none")]
    pub implements_catalog: Option<bool>,
    #[serde(rename = "implementsRepo", skip_serializing_if = "Option::is_none")]
    pub implements_repo: Option<bool>,
    #[serde(rename = "implementsAdmin", skip_serializing_if = "Option::is_none")]
    pub implements_admin: Option<bool>,
    #[serde(rename = "implementsAi", skip_serializing_if = "Option::is_none")]
    pub implements_ai: Option<bool>,
    #[serde(rename = "implementsSqlStore", skip_serializing_if = "Option::is_none")]
    pub implements_sql_store: Option<bool>,
    #[serde(rename = "implementsOlap", skip_serializing_if = "Option::is_none")]
    pub implements_olap: Option<bool>,
    #[serde(rename = "implementsObjectStore", skip_serializing_if = "Option::is_none")]
    pub implements_object_store: Option<bool>,
    #[serde(rename = "implementsFileStore", skip_serializing_if = "Option::is_none")]
    pub implements_file_store: Option<bool>,
    #[serde(rename = "implementsNotifier", skip_serializing_if = "Option::is_none")]
    pub implements_notifier: Option<bool>,
    #[serde(rename = "implementsWarehouse", skip_serializing_if = "Option::is_none")]
    pub implements_warehouse: Option<bool>,
}

impl V1ConnectorDriver {
    /// ConnectorDriver represents a connector driver available in the runtime.
    pub fn new() -> V1ConnectorDriver {
        V1ConnectorDriver {
            name: None,
            config_properties: None,
            source_properties: None,
            display_name: None,
            description: None,
            implements_registry: None,
            implements_catalog: None,
            implements_repo: None,
            implements_admin: None,
            implements_ai: None,
            implements_sql_store: None,
            implements_olap: None,
            implements_object_store: None,
            implements_file_store: None,
            implements_notifier: None,
            implements_warehouse: None,
        }
    }
}

