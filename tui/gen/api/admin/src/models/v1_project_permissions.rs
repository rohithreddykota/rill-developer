/*
 * rill/admin/v1/ai.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ProjectPermissions {
    #[serde(rename = "readProject", skip_serializing_if = "Option::is_none")]
    pub read_project: Option<bool>,
    #[serde(rename = "manageProject", skip_serializing_if = "Option::is_none")]
    pub manage_project: Option<bool>,
    #[serde(rename = "readProd", skip_serializing_if = "Option::is_none")]
    pub read_prod: Option<bool>,
    #[serde(rename = "readProdStatus", skip_serializing_if = "Option::is_none")]
    pub read_prod_status: Option<bool>,
    #[serde(rename = "manageProd", skip_serializing_if = "Option::is_none")]
    pub manage_prod: Option<bool>,
    #[serde(rename = "readDev", skip_serializing_if = "Option::is_none")]
    pub read_dev: Option<bool>,
    #[serde(rename = "readDevStatus", skip_serializing_if = "Option::is_none")]
    pub read_dev_status: Option<bool>,
    #[serde(rename = "manageDev", skip_serializing_if = "Option::is_none")]
    pub manage_dev: Option<bool>,
    #[serde(rename = "readProvisionerResources", skip_serializing_if = "Option::is_none")]
    pub read_provisioner_resources: Option<bool>,
    #[serde(rename = "manageProvisionerResources", skip_serializing_if = "Option::is_none")]
    pub manage_provisioner_resources: Option<bool>,
    #[serde(rename = "readProjectMembers", skip_serializing_if = "Option::is_none")]
    pub read_project_members: Option<bool>,
    #[serde(rename = "manageProjectMembers", skip_serializing_if = "Option::is_none")]
    pub manage_project_members: Option<bool>,
    #[serde(rename = "createMagicAuthTokens", skip_serializing_if = "Option::is_none")]
    pub create_magic_auth_tokens: Option<bool>,
    #[serde(rename = "manageMagicAuthTokens", skip_serializing_if = "Option::is_none")]
    pub manage_magic_auth_tokens: Option<bool>,
    #[serde(rename = "createReports", skip_serializing_if = "Option::is_none")]
    pub create_reports: Option<bool>,
    #[serde(rename = "manageReports", skip_serializing_if = "Option::is_none")]
    pub manage_reports: Option<bool>,
    #[serde(rename = "createAlerts", skip_serializing_if = "Option::is_none")]
    pub create_alerts: Option<bool>,
    #[serde(rename = "manageAlerts", skip_serializing_if = "Option::is_none")]
    pub manage_alerts: Option<bool>,
    #[serde(rename = "createBookmarks", skip_serializing_if = "Option::is_none")]
    pub create_bookmarks: Option<bool>,
    #[serde(rename = "manageBookmarks", skip_serializing_if = "Option::is_none")]
    pub manage_bookmarks: Option<bool>,
}

impl V1ProjectPermissions {
    pub fn new() -> V1ProjectPermissions {
        V1ProjectPermissions {
            read_project: None,
            manage_project: None,
            read_prod: None,
            read_prod_status: None,
            manage_prod: None,
            read_dev: None,
            read_dev_status: None,
            manage_dev: None,
            read_provisioner_resources: None,
            manage_provisioner_resources: None,
            read_project_members: None,
            manage_project_members: None,
            create_magic_auth_tokens: None,
            manage_magic_auth_tokens: None,
            create_reports: None,
            manage_reports: None,
            create_alerts: None,
            manage_alerts: None,
            create_bookmarks: None,
            manage_bookmarks: None,
        }
    }
}

