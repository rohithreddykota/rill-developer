/*
 * rill/admin/v1/ai.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1GetIFrameResponse {
    #[serde(rename = "iframeSrc", skip_serializing_if = "Option::is_none")]
    pub iframe_src: Option<String>,
    #[serde(rename = "runtimeHost", skip_serializing_if = "Option::is_none")]
    pub runtime_host: Option<String>,
    #[serde(rename = "instanceId", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    #[serde(rename = "accessToken", skip_serializing_if = "Option::is_none")]
    pub access_token: Option<String>,
    #[serde(rename = "ttlSeconds", skip_serializing_if = "Option::is_none")]
    pub ttl_seconds: Option<i64>,
}

impl V1GetIFrameResponse {
    pub fn new() -> V1GetIFrameResponse {
        V1GetIFrameResponse {
            iframe_src: None,
            runtime_host: None,
            instance_id: None,
            access_token: None,
            ttl_seconds: None,
        }
    }
}

