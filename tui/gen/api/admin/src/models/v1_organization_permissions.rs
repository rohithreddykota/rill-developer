/*
 * rill/admin/v1/ai.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1OrganizationPermissions {
    #[serde(rename = "readOrg", skip_serializing_if = "Option::is_none")]
    pub read_org: Option<bool>,
    #[serde(rename = "manageOrg", skip_serializing_if = "Option::is_none")]
    pub manage_org: Option<bool>,
    #[serde(rename = "readProjects", skip_serializing_if = "Option::is_none")]
    pub read_projects: Option<bool>,
    #[serde(rename = "createProjects", skip_serializing_if = "Option::is_none")]
    pub create_projects: Option<bool>,
    #[serde(rename = "manageProjects", skip_serializing_if = "Option::is_none")]
    pub manage_projects: Option<bool>,
    #[serde(rename = "readOrgMembers", skip_serializing_if = "Option::is_none")]
    pub read_org_members: Option<bool>,
    #[serde(rename = "manageOrgMembers", skip_serializing_if = "Option::is_none")]
    pub manage_org_members: Option<bool>,
}

impl V1OrganizationPermissions {
    pub fn new() -> V1OrganizationPermissions {
        V1OrganizationPermissions {
            read_org: None,
            manage_org: None,
            read_projects: None,
            create_projects: None,
            manage_projects: None,
            read_org_members: None,
            manage_org_members: None,
        }
    }
}

