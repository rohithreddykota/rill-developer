/*
 * rill/admin/v1/ai.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AdminServiceConnectProjectToGithubRequest {
    #[serde(rename = "repo", skip_serializing_if = "Option::is_none")]
    pub repo: Option<String>,
    #[serde(rename = "branch", skip_serializing_if = "Option::is_none")]
    pub branch: Option<String>,
    #[serde(rename = "subpath", skip_serializing_if = "Option::is_none")]
    pub subpath: Option<String>,
    #[serde(rename = "force", skip_serializing_if = "Option::is_none")]
    pub force: Option<bool>,
}

impl AdminServiceConnectProjectToGithubRequest {
    pub fn new() -> AdminServiceConnectProjectToGithubRequest {
        AdminServiceConnectProjectToGithubRequest {
            repo: None,
            branch: None,
            subpath: None,
            force: None,
        }
    }
}

