/*
 * rill/admin/v1/ai.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1GetRepoMetaResponse {
    #[serde(rename = "gitUrl", skip_serializing_if = "Option::is_none")]
    pub git_url: Option<String>,
    #[serde(rename = "gitUrlExpiresOn", skip_serializing_if = "Option::is_none")]
    pub git_url_expires_on: Option<String>,
    #[serde(rename = "gitSubpath", skip_serializing_if = "Option::is_none")]
    pub git_subpath: Option<String>,
    #[serde(rename = "archiveDownloadUrl", skip_serializing_if = "Option::is_none")]
    pub archive_download_url: Option<String>,
}

impl V1GetRepoMetaResponse {
    pub fn new() -> V1GetRepoMetaResponse {
        V1GetRepoMetaResponse {
            git_url: None,
            git_url_expires_on: None,
            git_subpath: None,
            archive_download_url: None,
        }
    }
}

